apiVersion: v1
kind: Service
metadata:
  name: api-emi-gateway
  labels:
    run: api-emi-gateway
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http-ws
  selector:
    run: api-emi-gateway
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: api-emi-gateway
spec:
  selector:
    matchLabels:
      run: api-emi-gateway
  serviceName: "api-emi-gateway"
  replicas: 2
  template:
    metadata:
      labels:
        run: api-emi-gateway
    spec:
      containers:
      - name: api-emi-gateway
        volumeMounts:
        - name: google-application-credentials
          mountPath: "/etc/GOOGLE_APPLICATION_CREDENTIALS"
          readOnly: true
        image: IMAGE_NAMESPACE/IMAGE_NAME:IMAGE_TAG
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        livenessProbe:
          # # tcp probe
          # tcpSocket:
          #   port: 3000
          # an http probe
          tcpSocket:
            port: 3000
          # length of time to wait for a pod to initialize
          # after pod startup, before applying health checking
          initialDelaySeconds: 30
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 400m
            memory: 1200Mi
          requests:
            cpu: 200m
            memory: 200Mi
        env:
        - name: NODE_ENV
          value: production
        # GRAPHQL CONGIF      
        - name: GRAPHQL_END_POINT_PORT
          value: '3000'
        - name: GRAPHQL_END_POINT_HOST
          value: localhost
        - name: GRAPHQL_HTTP_END_POINT
          value: /api/emi-gateway/graphql/http
        - name: GRAPHIQL_HTTP_END_POINT
          value: /api/emi-gateway/graphql/http
        - name: GRAPHQL_LIVENESS_HTTP_END_POINT
          value: /api/emi-gateway/graphql/liveness
        - name: GRAPHQL_WS_END_POINT
          value: /api/emi-gateway/graphql/ws
        - name: APOLLO_KEY
          value: "service:emi-gateway:LW59yH78XNY_cH2TY4YfbQ"
        - name: APOLLO_GRAPH_ID
          value: emi-gateway
        - name: APOLLO_GRAPH_VARIANT
          value: current
        - name: APOLLO_SCHEMA_REPORTING
          value: 'true'
        # APOLLO ENGINE CONFIG
        - name: APOLLO_ENGINE_API_KEY
          value: 'service:emi-gateway:LW59yH78XNY_cH2TY4YfbQ'
        - name: APOLLO_ENGINE_LOG_LEVEL
          value: WARN           
        # GCLOUD PUB_SUB CONGIF       
        - name: BROKER_TYPE
          value: PUBSUB         
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /etc/GOOGLE_APPLICATION_CREDENTIALS/gcloud-service-key.json  
        - name: GCLOUD_PROJECT_ID
          valueFrom:
            configMapKeyRef:
              name: environment-variables
              key: gcloud-project-id
        - name: GATEWAY_REPLIES_TOPIC
          value: emi-gateway-replies
        - name: GATEWAY_REPLIES_TOPIC_SUBSCRIPTION
          value: emi-gateway-replies
        - name: GATEWAY_EVENTS_TOPIC
          value: events
        - name: GATEWAY_EVENTS_TOPIC_SUBSCRIPTION
          value: events-emi-gateway
        - name: GATEWAY_MATERIALIZED_VIEW_UPDATES_TOPIC
          value: emi-gateway-materialized-view-updates
        - name: GATEWAY_MATERIALIZED_VIEW_UPDATES_TOPIC_SUBSCRIPTION
          value: emi-gateway-materialized-view-updates-emi-gateway
        - name: REPLY_TIMEOUT
          value: '2000'
        - name: SECONDARY_BROKER_ENABLED
          value: 'true'
        - name: MQTT_SERVER_URL
          value: 'tcp://emqx-internal'
        - name: MQTT_PORT
          value: '1883'
        - name: MQTT_PORT
          value: '1883'
        - name: MQTT_PROTOCOL
          value: tcp
        - name: MQTT_PROTOCOL_VERSION
          value: '4'
        # GOOGLE STORAGE CONFIG
        - name: COMPANY_DOCUMENTS_BUCKET_NAME
          value: nebulae-university-company-documents
        # JWT CONFIG        
        - name: JWT_PUBLIC_KEY
          value: -----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlp5Fy2XpnNgNdanEq1JkE+8GocAR0nwZQnvkzkpVAkuWMfd6frYThmE5Hmz6gqhr255+jJZ6yee36pMSkRXsDGKT5FxL+3pf2zWLfsm8Uy3uoAiqAeWfoYRyUBgsE3Aip7bN3d0+Mqnks+ggSKmXi7t5qU0CBqZrSpgIJnBiIE0q3AlsQ5nM4lVf4jKp9nGYNmuKFeJn6gGu1bKr4EIDvOrH6W74ulc027XjBji8ZdUDstpQebum+rJ1a7HH9cyZhGcwSYDXlvEgq2oewq+gU5D+lQOlj457ge8bPNiOWK6tJulZuoDYEMXRVzyxF5W9/hWKyRPIutzLObWceW4P6wIDAQAB\n-----END PUBLIC KEY-----
        # JWT CONFIG        
        - name: JWT_DEVICE_PUBLIC_KEY
          value: -----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAlp5Fy2XpnNgNdanEq1JkE+8GocAR0nwZQnvkzkpVAkuWMfd6frYThmE5Hmz6gqhr255+jJZ6yee36pMSkRXsDGKT5FxL+3pf2zWLfsm8Uy3uoAiqAeWfoYRyUBgsE3Aip7bN3d0+Mqnks+ggSKmXi7t5qU0CBqZrSpgIJnBiIE0q3AlsQ5nM4lVf4jKp9nGYNmuKFeJn6gGu1bKr4EIDvOrH6W74ulc027XjBji8ZdUDstpQebum+rJ1a7HH9cyZhGcwSYDXlvEgq2oewq+gU5D+lQOlj457ge8bPNiOWK6tJulZuoDYEMXRVzyxF5W9/hWKyRPIutzLObWceW4P6wIDAQAB\n-----END PUBLIC KEY-----
      imagePullSecrets:
      - name: gitlab-auth
              
      volumes:
      - name: google-application-credentials
        secret:
          secretName: google-application-credentials
